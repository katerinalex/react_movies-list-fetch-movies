{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","findMovie","newTitle","changeSearchString","newMovie","addMovie","isMovieFind","isError","isFirstSearch","htmlFor","type","id","placeholder","value","onChange","onClick","disabled","App","useState","setMovies","setNewMovie","setNewTitle","setIsMovieFind","setIsError","setIsFirstSearch","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","Title","Plot","Poster","imdbID","finally","target","some","oldMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad8d824a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  findMovie: (event: React.MouseEvent<HTMLButtonElement>) => void,\n  newTitle: string,\n  changeSearchString: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  newMovie: Movie | null,\n  addMovie: () => void,\n  isMovieFind: boolean,\n  isError: boolean,\n  isFirstSearch: boolean,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  findMovie,\n  newTitle,\n  changeSearchString,\n  newMovie,\n  addMovie,\n  isMovieFind,\n  isError,\n  isFirstSearch,\n}) => {\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={newTitle}\n              onChange={changeSearchString}\n            />\n          </div>\n\n          {isError && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={isMovieFind\n                ? 'button is-light'\n                : 'button is-light is-loading'}\n              onClick={findMovie}\n              disabled={!newTitle}\n            >\n              {isFirstSearch\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {newMovie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {newMovie && (<h2 className=\"title\">Preview</h2>)}\n        {newMovie && <MovieCard movie={newMovie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [newTitle, setNewTitle] = useState('');\n  const [isMovieFind, setIsMovieFind] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [isFirstSearch, setIsFirstSearch] = useState(true);\n\n  const changeSearchString = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const findMovie = (event:React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setIsMovieFind(false);\n\n    getMovie(newTitle)\n      .then(res => {\n        if ('Error' in res) {\n          setNewMovie(null);\n          setIsMovieFind(true);\n          setIsError(true);\n        } else {\n          setNewMovie({\n            title: res.Title,\n            description: res.Plot,\n            imgUrl: res.Poster,\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}/`,\n            imdbId: res.imdbID,\n          });\n          setIsMovieFind(true);\n        }\n      })\n      .catch(() => {\n        setNewMovie(null);\n        setIsMovieFind(true);\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsMovieFind(true);\n        setIsFirstSearch(false);\n      });\n  };\n\n  const addMovie = () => {\n    if (newMovie) {\n      const isExist = movies.some(movie => movie.imdbId === newMovie.imdbId);\n\n      if (!isExist) {\n        setMovies(oldMovies => ([\n          ...oldMovies,\n          newMovie,\n        ]));\n      }\n\n      setNewTitle('');\n      setNewMovie(null);\n      setIsFirstSearch(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          findMovie={findMovie}\n          newTitle={newTitle}\n          changeSearchString={changeSearchString}\n          newMovie={newMovie}\n          addMovie={addMovie}\n          isMovieFind={isMovieFind}\n          isError={isError}\n          isFirstSearch={isFirstSearch}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=942d14a8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}